{"version":3,"sources":["App.jsx","index.js"],"names":["jss","create","plugins","jssPreset","rtl","App","state","palette","type","primary","main","secondary","spacing","typography","fontSize","direction","handleChange","target","name","value","setState","handlePrimaryColorChange","color","hex","handleSecondaryColorChange","gridItemText","Grid","item","xs","sm","Typography","component","variant","Box","border","p","gridItemBackground","targetColor","split","bgcolor","Fragment","theme","createMuiTheme","this","StylesProvider","CssBaseline","align","gutterBottom","Container","maxWidth","dir","Paper","elevation","marginBottom","container","justify","alignItems","FormControlLabel","control","Switch","defaultChecked","onChange","label","labelPlacement","FormControl","style","minWidth","InputLabel","Select","defaultValue","MenuItem","Button","startIcon","FormatTextdirectionLToR","FormatTextdirectionRToL","onClick","e","currentTarget","Divider","width","presetColors","title","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23748e90.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// prettier-ignore\nimport {\n  Paper,  Typography,  CssBaseline,  Container,  Grid,  Box,  Switch,  FormControlLabel,  FormControl,  \n  InputLabel,  Select,  MenuItem,  Button,  Divider } from '@material-ui/core';\n// prettier-ignore\nimport {  FormatTextdirectionRToL,  FormatTextdirectionLToR } from '@material-ui/icons';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\nimport { SketchPicker } from 'react-color';\nimport { create } from 'jss';\nimport rtl from 'jss-rtl';\n\n// RTL Plugin\nconst jss = create({\n  plugins: [...jssPreset().plugins, rtl()]\n});\n\nclass App extends Component {\n  state = {\n    palette: {\n      type: 'dark',\n      primary: { main: '#3f51b5' },\n      secondary: { main: '#f50057' }\n    },\n    spacing: 8,\n    typography: {\n      fontSize: 14\n    },\n    direction: 'ltr'\n  };\n\n  // Switch , Select & Button Change Handler\n  handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      // Change font Size\n      case 'fontSize':\n        this.setState({ typography: { [name]: value } });\n        break;\n      // Change Direction RTL <-> LTR\n      case 'direction':\n        this.setState({ [name]: value === 'ltr' ? 'rtl' : 'ltr' });\n        break;\n      // Change Light Mode Dark <-> Light\n      case 'darkMode':\n        this.setState(({ palette }) => ({\n          palette: {\n            ...palette,\n            type: value === 'dark' ? 'light' : 'dark'\n          }\n        }));\n        break;\n      default:\n        this.setState({ [name]: value });\n        break;\n    }\n  };\n\n  // Primary Color Picker Handler\n  handlePrimaryColorChange = color => {\n    this.setState(({ palette }) => ({\n      palette: {\n        ...palette,\n        primary: {\n          main: color.hex\n        }\n      }\n    }));\n  };\n\n  // Secondary Color Picker Handler\n  handleSecondaryColorChange = color => {\n    this.setState(({ palette }) => ({\n      palette: {\n        ...palette,\n        secondary: {\n          main: color.hex\n        }\n      }\n    }));\n  };\n\n  // Colorized Typography Component Item\n  gridItemText = target => {\n    return (\n      <Grid item xs={12} sm={4}>\n        <Typography component=\"div\" variant=\"body1\">\n          <Box color={target} border={1} p={2}>\n            {target}\n          </Box>\n        </Typography>\n      </Grid>\n    );\n  };\n\n  // Colorized Background Typography Component Item\n  gridItemBackground = target => {\n    const targetColor = target.split('.')[0];\n    let color = `${targetColor}.contrastText`;\n    if (targetColor === 'text') color = 'background.paper';\n\n    return (\n      <Grid item xs={12} sm={4}>\n        <Box bgcolor={target} color={color} p={2}>\n          {target}\n        </Box>\n      </Grid>\n    );\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {/* Material UI Theme Provider */}\n        <MuiThemeProvider theme={createMuiTheme(this.state)}>\n          {/*  RTL & LTR Plugin Provider */}\n          <StylesProvider jss={jss}>\n            {/* Material UI Global Theme */}\n            <CssBaseline />\n            <Typography variant=\"h1\" align=\"center\" gutterBottom>\n              Material UI\n            </Typography>\n            <Container maxWidth=\"md\" dir={this.state.direction}>\n              <Paper elevation={24}>\n                <Box p={1} marginBottom={5}>\n                  <Grid container spacing={1}>\n                    <Grid item xs={12} sm={12}>\n                      <Grid\n                        container\n                        justify=\"space-between\"\n                        alignItems=\"center\"\n                        spacing={1}\n                      >\n                        <Grid item>\n                          {/* Dark Mode Switch */}\n                          <FormControlLabel\n                            control={\n                              <Switch\n                                defaultChecked={true}\n                                onChange={this.handleChange}\n                                name=\"darkMode\"\n                                value={this.state.palette.type}\n                              />\n                            }\n                            label=\"Dark\"\n                            labelPlacement=\"start\"\n                          />\n                        </Grid>\n                        <Grid item>\n                          {/* Font Size Selector */}\n                          <FormControl\n                            variant=\"outlined\"\n                            style={{ minWidth: 120 }}\n                          >\n                            <InputLabel>Font Size</InputLabel>\n                            <Select\n                              label=\"Font Size\"\n                              name=\"fontSize\"\n                              defaultValue={14}\n                              onChange={this.handleChange}\n                            >\n                              <MenuItem value={14}>\n                                <em>\n                                  Default <b>14</b>\n                                </em>\n                              </MenuItem>\n                              <MenuItem value={10}>10</MenuItem>\n                              <MenuItem value={12}>12</MenuItem>\n                              <MenuItem value={16}>16</MenuItem>\n                              <MenuItem value={20}>20</MenuItem>\n                            </Select>\n                          </FormControl>\n                        </Grid>\n                        <Grid item>\n                          {/* Spacing Selector */}\n                          <FormControl\n                            variant=\"outlined\"\n                            style={{ minWidth: 120 }}\n                          >\n                            <InputLabel>Spacing</InputLabel>\n                            <Select\n                              label=\"Spacing\"\n                              name=\"spacing\"\n                              defaultValue={8}\n                              onChange={this.handleChange}\n                            >\n                              <MenuItem value={8}>\n                                <em>\n                                  Default <b>8</b>\n                                </em>\n                              </MenuItem>\n                              <MenuItem value={4}>4</MenuItem>\n                              <MenuItem value={6}>6</MenuItem>\n                              <MenuItem value={10}>10</MenuItem>\n                              <MenuItem value={12}>12</MenuItem>\n                            </Select>\n                          </FormControl>\n                        </Grid>\n                        <Grid item>\n                          {/* Direction Toggle Button */}\n                          <Button\n                            variant=\"outlined\"\n                            value={this.state.direction}\n                            startIcon={\n                              this.state.direction === 'ltr' ? (\n                                <FormatTextdirectionLToR />\n                              ) : (\n                                <FormatTextdirectionRToL />\n                              )\n                            }\n                            onClick={e => {\n                              this.handleChange({\n                                target: {\n                                  name: 'direction',\n                                  value: e.currentTarget.value\n                                }\n                              });\n                            }}\n                          >\n                            Direction\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                      <Typography variant=\"h4\" align=\"center\" gutterBottom>\n                        Direction\n                      </Typography>\n                    </Grid>\n                    {/* Always LTR Item */}\n                    <Grid item xs={6} sm={6}>\n                      <Typography variant=\"body1\" align=\"center\" gutterBottom>\n                        Always LTR :\n                      </Typography>\n                    </Grid>\n                    {/* Always RTL Item */}\n                    <Grid item xs={6} sm={6}>\n                      <Typography variant=\"body1\" align=\"center\" gutterBottom>\n                        Always RTL :\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                      <Divider />\n                    </Grid>\n                    {/* Always LTR Item */}\n                    <Grid item xs={6} sm={6}>\n                      <MuiThemeProvider\n                        theme={createMuiTheme({ direction: 'ltr' })}\n                      >\n                        <Box dir=\"ltr\" p={2}>\n                          Welcome\n                        </Box>\n                      </MuiThemeProvider>\n                    </Grid>\n                    {/* Always RTL Item */}\n                    <Grid item xs={6} sm={6}>\n                      <MuiThemeProvider\n                        theme={createMuiTheme({ direction: 'rtl' })}\n                      >\n                        <StylesProvider jss={jss}>\n                          <Box dir=\"rtl\" p={2}>\n                            Welcome\n                          </Box>\n                        </StylesProvider>\n                      </MuiThemeProvider>\n                    </Grid>\n                    {/* Always LTR Arabic Item */}\n                    <Grid item xs={6} sm={6}>\n                      <MuiThemeProvider\n                        theme={createMuiTheme({ direction: 'ltr' })}\n                      >\n                        <Box dir=\"ltr\" p={2}>\n                          اهلاّ وسهلاّ\n                        </Box>\n                      </MuiThemeProvider>\n                    </Grid>\n                    {/* Always RTL Arabic Item */}\n                    <Grid item xs={6} sm={6}>\n                      <MuiThemeProvider\n                        theme={createMuiTheme({ direction: 'rtl' })}\n                      >\n                        <StylesProvider jss={jss}>\n                          <Box dir=\"rtl\" p={2}>\n                            اهلاّ وسهلاّ\n                          </Box>\n                        </StylesProvider>\n                      </MuiThemeProvider>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      {/* Primary Color Picker */}\n                      <Grid container direction=\"column\" alignItems=\"center\">\n                        <Grid item xs={6} sm={6}>\n                          <Typography variant=\"h6\" gutterBottom>\n                            Primary\n                          </Typography>\n                        </Grid>\n                        <Grid item>\n                          <SketchPicker\n                            width={150}\n                            onChange={this.handlePrimaryColorChange}\n                            presetColors={[\n                              {\n                                color: '#3f51b5',\n                                title: 'Primary.Main Default'\n                              },\n                              {\n                                color: '#f50057',\n                                title: 'Secondary.Main Default'\n                              },\n                              { color: '#f50057', title: 'Error.Main Default' },\n                              {\n                                color: '#ff9800',\n                                title: 'Warning.Main Default'\n                              },\n                              { color: '#2196f3', title: 'Info.Main Default' },\n                              {\n                                color: '#4caf50',\n                                title: 'Success.Main Default'\n                              }\n                            ]}\n                            color={this.state.palette.primary.main}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      {/* Secondary Color Picker */}\n                      <Grid container direction=\"column\" alignItems=\"center\">\n                        <Grid item>\n                          <Typography variant=\"h6\" gutterBottom>\n                            Secondary\n                          </Typography>\n                        </Grid>\n                        <Grid item>\n                          <SketchPicker\n                            width={150}\n                            onChange={this.handleSecondaryColorChange}\n                            presetColors={[\n                              {\n                                color: '#3f51b5',\n                                title: 'Primary.Main Default'\n                              },\n                              {\n                                color: '#f50057',\n                                title: 'Secondary.Main Default'\n                              },\n                              {\n                                color: '#f50057',\n                                title: 'Error.Main Default'\n                              },\n                              {\n                                color: '#ff9800',\n                                title: 'Warning.Main Default'\n                              },\n                              {\n                                color: '#2196f3',\n                                title: 'Info.Main Default'\n                              },\n                              {\n                                color: '#4caf50',\n                                title: 'Success.Main Default'\n                              }\n                            ]}\n                            color={this.state.palette.secondary.main}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    {/* Color Examples */}\n                    <Grid item xs={12} sm={12}>\n                      <Typography variant=\"h4\" align=\"center\" gutterBottom>\n                        Colors\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                      <Grid container spacing={1}>\n                        {this.gridItemText('primary.main')}\n                        {this.gridItemText('secondary.main')}\n                        {this.gridItemText('error.main')}\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                      <Grid container spacing={1}>\n                        {this.gridItemText('warning.main')}\n                        {this.gridItemText('info.main')}\n                        {this.gridItemText('success.main')}\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                      <Grid container spacing={1}>\n                        {this.gridItemText('text.primary')}\n                        {this.gridItemText('text.secondary')}\n                        {this.gridItemText('text.disabled')}\n                      </Grid>\n                    </Grid>\n                    {/* Background Color Examples */}\n                    <Grid item xs={12} sm={12}>\n                      <Typography variant=\"h4\" align=\"center\" gutterBottom>\n                        Background Colors\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                      <Grid container spacing={1}>\n                        {this.gridItemBackground('primary.main')}\n                        {this.gridItemBackground('secondary.main')}\n                        {this.gridItemBackground('error.main')}\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                      <Grid container spacing={1}>\n                        {this.gridItemBackground('warning.main')}\n                        {this.gridItemBackground('info.main')}\n                        {this.gridItemBackground('success.main')}\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                      <Grid container spacing={1}>\n                        {this.gridItemBackground('text.primary')}\n                        {this.gridItemBackground('text.secondary')}\n                        {this.gridItemBackground('text.disabled')}\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </Paper>\n            </Container>\n          </StylesProvider>\n        </MuiThemeProvider>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}